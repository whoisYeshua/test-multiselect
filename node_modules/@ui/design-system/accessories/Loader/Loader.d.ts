import { СolorScheme } from '../../controls/BaseControlWrapper/types';
import { ControlBoxSize } from '../../controls/BaseControlWrapper/styled/ControlBox';
interface LoaderBorderRadiusProps {
    topLeft?: string;
    topRight?: string;
    bottomLeft?: string;
    bottomRight?: string;
}
/**
 * Параметры для окошка с подписью в лоадере.
 */
export interface MessageParams {
    /**
     * Заголовок сообщения.
     */
    header: string;
    /**
     * Дополнительный текст сообщения.
     */
    subheader?: string | null;
    /**
     * Ширина контейнера с сообщением.
     * Указывается в пикселях, без единиц измерения.
     */
    width?: string | number;
}
export interface LoaderProps {
    /**
     * Показывать ли лоадер.
     * По умолчанию `true`. Необходимо передавать `false` при необходимости скрыть лоадер.
     */
    show?: boolean;
    /**
     * Принудительно перекрывает лоадером всю доступную область экрана, а не только родительский элемент.
     */
    fullScreen?: boolean;
    /**
     * Параметры для окошка с подписью в лоадере.
     * Позволяет опционально указать заголовок (`header`), ширину контейнера с сообщением (`width`),
     * а также дополнительный текст сообщения (`subheader`), которые будут отображены рядом со спиннером.
     * При использовании свойств для кастомизации лоадера - `spinnerSize` и `isInControl`,
     * сообщение не будет отображаться.
     * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>
     */
    message?: MessageParams;
    /**
     * Время обратного отсчёта в секундах.
     * Если указано, лоадер отображается с таймером обратного отсчёта,
     * по истечению таймера, срабатывает функция `onCountdownEnd` (если указана),
     * позволяющая обновить таймер или изменить сообщение в лоадере, если реальная загрузка ещё не закончилась.
     * Таймер перезапускается при изменении данного параметра, а также при изменении параметра `show`.
     * При использовании свойств для кастомизации лоадера - `spinnerSize` и `isInControl`,
     * таймер не будет отображаться и работать.
     */
    time?: number;
    /**
     * Функция обратного вызова, которая вызывается после окончания таймера.
     * Если функция обратного вызова не передана, момент окончания таймера не будет обработан.
     */
    onCountdownEnd?: () => void;
    /**
     * Объект с параметрами для скругления границ.
     * Применяется для соответствия стилей, если необходимо использовать Loader на элементе с закруглениями.
     * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>
     */
    borderRadius?: LoaderBorderRadiusProps;
    /**
     * Позволяет указать размер спиннера в лоадере (в пикселях).
     * НЕ ИСПОЛЬЗОВАТЬ БЕЗ КРАЙНЕЙ НЕОБХОДИМОСТИ.
     * Параметр предназначен в первую очередь для использования лоадера в контролах.
     */
    spinnerSize?: number;
    /**
     * Размывать ли фон лоадера.
     */
    blur?: boolean;
    /**
     * Служебный параметр.
     * ТОЛЬКО ДЛЯ ЛОАДЕРА ВНУТРИ КОНТРОЛА.
     * Изменяет положение спиннера для соответствия дизайну контролов.
     */
    isInControl?: boolean;
    /**
     * Служебный параметр.
     * ТОЛЬКО ДЛЯ ЛОАДЕРА ВНУТРИ КОНТРОЛА.
     * Изменяет некоторые параметры лоадера в контроле, в зависимости от его размера.
     */
    controlSize?: ControlBoxSize;
    /**
     * СЛУЖЕБНЫЙ ПАРАМЕТР, ИСПОЛЬЗУЕТСЯ ТОЛЬКО В ЗАВИСИМЫХ КОМПОНЕНТАХ!
     * Вариант - от него зависят стили.
     */
    colorScheme?: СolorScheme;
}
/**
 * Анимированный лоадер с возможностью указать сообщение
 */
declare const Loader: {
    ({ show, fullScreen, borderRadius, spinnerSize, time, blur, onCountdownEnd, isInControl, controlSize, message, colorScheme, }: LoaderProps): JSX.Element;
    defaultProps: {
        /**
         * Показывать ли лоадер.
         * По умолчанию `true`. Необходимо передавать `false` при необходимости скрыть лоадер.
         */
        show?: boolean;
        /**
         * Принудительно перекрывает лоадером всю доступную область экрана, а не только родительский элемент.
         */
        fullScreen?: boolean;
        /**
         * Параметры для окошка с подписью в лоадере.
         * Позволяет опционально указать заголовок (`header`), ширину контейнера с сообщением (`width`),
         * а также дополнительный текст сообщения (`subheader`), которые будут отображены рядом со спиннером.
         * При использовании свойств для кастомизации лоадера - `spinnerSize` и `isInControl`,
         * сообщение не будет отображаться.
         * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>
         */
        message?: MessageParams;
        /**
         * Время обратного отсчёта в секундах.
         * Если указано, лоадер отображается с таймером обратного отсчёта,
         * по истечению таймера, срабатывает функция `onCountdownEnd` (если указана),
         * позволяющая обновить таймер или изменить сообщение в лоадере, если реальная загрузка ещё не закончилась.
         * Таймер перезапускается при изменении данного параметра, а также при изменении параметра `show`.
         * При использовании свойств для кастомизации лоадера - `spinnerSize` и `isInControl`,
         * таймер не будет отображаться и работать.
         */
        time?: number;
        /**
         * Функция обратного вызова, которая вызывается после окончания таймера.
         * Если функция обратного вызова не передана, момент окончания таймера не будет обработан.
         */
        onCountdownEnd?: () => void;
        /**
         * Объект с параметрами для скругления границ.
         * Применяется для соответствия стилей, если необходимо использовать Loader на элементе с закруглениями.
         * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>
         */
        borderRadius?: LoaderBorderRadiusProps;
        /**
         * Позволяет указать размер спиннера в лоадере (в пикселях).
         * НЕ ИСПОЛЬЗОВАТЬ БЕЗ КРАЙНЕЙ НЕОБХОДИМОСТИ.
         * Параметр предназначен в первую очередь для использования лоадера в контролах.
         */
        spinnerSize?: number;
        /**
         * Размывать ли фон лоадера.
         */
        blur?: boolean;
        /**
         * Служебный параметр.
         * ТОЛЬКО ДЛЯ ЛОАДЕРА ВНУТРИ КОНТРОЛА.
         * Изменяет положение спиннера для соответствия дизайну контролов.
         */
        isInControl?: boolean;
        /**
         * Служебный параметр.
         * ТОЛЬКО ДЛЯ ЛОАДЕРА ВНУТРИ КОНТРОЛА.
         * Изменяет некоторые параметры лоадера в контроле, в зависимости от его размера.
         */
        controlSize?: ControlBoxSize;
        /**
         * СЛУЖЕБНЫЙ ПАРАМЕТР, ИСПОЛЬЗУЕТСЯ ТОЛЬКО В ЗАВИСИМЫХ КОМПОНЕНТАХ!
         * Вариант - от него зависят стили.
         */
        colorScheme?: СolorScheme;
    };
    displayName: string;
};
export declare const defaultLoaderProps: LoaderProps;
export default Loader;
