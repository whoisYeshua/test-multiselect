import { Service } from '../../DadataSelect';
interface BoundValue {
    value: string | null;
}
interface SearchParams {
    /**
     *  Количество результатов (максимум — 20).
     */
    count?: number;
    /**
     *  Ограничение по родителю (страна, регион, район, город, улица),
     *  чтобы искать адреса только в определенной локации.
     */
    locations?: Record<string, string>[];
    /**
     *  Сужение области поиска метро. Фильтрация работает по полям city_kladr_id, city_fias_id, city, line_id и is_closed.
     */
    filters?: Record<string, string>[];
    /**
     * Ограничение по типу банка. BANK - Банк, BANK_BRANCH - Филиал банка
     */
    type?: 'BANK' | 'BANK_BRANCH';
    /**
     * Установка поиска отдельно по фамилии, имени, отчеству
     */
    parts?: string[];
}
export interface SearchParamsWithBounds extends SearchParams {
    /**
     *  Ограничение по глубине выдачи.
     *  Например, только страны и регионы 'country-region' или только страны 'country'.
     */
    bounds?: string | null;
}
interface BoundData {
    from_bound: BoundValue;
    to_bound: BoundValue;
}
declare type Query = {
    query: string;
};
export declare type AddRequestBodyReturnValue = SearchParams & BoundData & Query;
export declare function addRequestBody(inputValue: string, { count, locations, bounds, filters, type }: SearchParamsWithBounds, service: Service): AddRequestBodyReturnValue;
export {};
