import React from 'react';
import { ControlProps } from '../BaseControlWrapper/ControlWrapper';
import { SelectableControlItem } from '../Select/useStateManager';
import { СolorScheme } from '../BaseControlWrapper/types';
export interface RadioGroupItemProps<Item extends SelectableControlItem = SelectableControlItem> extends ControlProps {
    /**
     *  Объект содержащий информацию об опции для рендера и обработки клика
     */
    item: Item;
    /**
     * Вариант радио группы - от этого зависят ее стили.
     */
    colorScheme?: СolorScheme;
    /**
     * Цвет фона. Цвет фона среды где используется компонент.
     * Использовать только при `colorScheme` === `onColor`;
     */
    backgroundColor?: string;
    /**
     *  Состояние кнопки
     */
    checked: boolean;
    /**
     *  Уникальный идентификатор чекбокса в группе
     */
    id?: string;
    /**
     * Обработчик изменений значения. Интерфейс соответствует существующему контракту IRIS.
     */
    onChange: (code: Item['code']) => void;
    /**
     * Функция для рендера кастомной надписи
     */
    renderCustomLabel?: (item: Item, checked?: boolean) => React.ReactNode;
    /**
     * Обработчик клика. Добавлен для использования RadioGroupItem отдельно от RadioGroup в компоненте Table.
     */
    onClick?: (event?: React.MouseEvent<HTMLElement>) => void;
    /**
     * Отдельный режим отображения, внутри компонента Table, при котором у элемента скрыт текстовый label.
     */
    isTableMode?: boolean;
}
/**
 * Вариант для выбора из RadioGroup. Без RadioGroup не используется, за исключением элемента Table.
 */
declare const RadioGroupItem: {
    <Item extends SelectableControlItem>({ backgroundColor, colorScheme, id, name, item, checked, disabled, tooltip, tooltipIconVariant, errors, renderCustomLabel, onClick, isTableMode, onChange, onTooltipClick, }: RadioGroupItemProps<Item>): JSX.Element;
    defaultProps: {
        backgroundColor: string;
        tooltipIconVariant: string;
    };
};
export default RadioGroupItem;
