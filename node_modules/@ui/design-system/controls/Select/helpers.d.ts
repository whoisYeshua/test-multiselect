import { SelectValue, SelectableControlItem } from './useStateManager';
export declare const hasOutsideValue: <Item extends SelectableControlItem, IsMulti extends boolean = false, UseFullItem extends boolean = false>(value: SelectValue<Item, IsMulti, UseFullItem>) => boolean;
export declare const getOptionsMap: <Item extends SelectableControlItem>(items: Item[]) => Record<string | number, Item>;
export declare const sortOptionsBySelectedValues: <Item extends SelectableControlItem>(options: Item[], isPickAllOptionsItem: boolean) => Item[];
export declare const getSelectedMultiValue: <Item extends SelectableControlItem, IsMulti extends boolean = false, UseFullItem extends boolean = false>(value: SelectValue<Item, IsMulti, UseFullItem>, isMulti: boolean, useFullItem: boolean, items: Item[], selectedMultiValue: Item[], isCombined?: boolean) => Item[];
export declare const getSelectedValue: <Item extends SelectableControlItem>(currentMultiValue: Item[], currentValue: Item, selectedValue: Item | Item[], isMulti: boolean, isOutsideValue: boolean) => Item | Item[];
export declare const getFullValue: <Item extends SelectableControlItem, IsMulti extends boolean = false, UseFullItem extends boolean = false>(value: SelectValue<Item, IsMulti, UseFullItem>, items: Item[], isAsyncSearchable: boolean, creatable: boolean) => Item;
export declare const filteredOptions: <Item extends SelectableControlItem>(options: Item[], selectedValues: (string | number | Item)[]) => Item[];
export declare const getItem: <Item extends SelectableControlItem>(useFullItem: boolean, item: Item) => string | number | Item;
export declare const getCreatableOptions: <Item extends SelectableControlItem>(inputValue: string, options: Item[]) => Item[];
export declare const deletePickItemsFromOptions: <Item extends SelectableControlItem>(options: Item[]) => Item[];
export declare const getScrollbarHeight: (optionsTitle?: string) => 216 | 249;
