import React from 'react';
import { SelectableControlItem, SelectValue } from '../../controls/Select/useStateManager';
interface UseStateManagerProps<Item extends SelectableControlItem, UseFullItem extends boolean> {
    items: Item[];
    startShownValueIndex: number;
    value?: SelectValue<Item, false, UseFullItem>;
    useFullItem: UseFullItem;
    isOpen: boolean;
    setIsOpen: (value: React.SetStateAction<boolean>) => void;
    onChange: (newValue: SelectValue<Item, false, UseFullItem>) => void;
}
export declare const useStateManager: <Item extends SelectableControlItem, UseFullItem extends boolean>({ items, startShownValueIndex, value, useFullItem, isOpen, setIsOpen, onChange, }: UseStateManagerProps<Item, UseFullItem>) => {
    onSelectOption: (option: Item) => void;
    selectedValue: Item;
    options: Item[];
    setSelectedValue: React.Dispatch<React.SetStateAction<Item>>;
    setOptions: React.Dispatch<React.SetStateAction<Item[]>>;
    closeMenu: () => void;
};
export {};
