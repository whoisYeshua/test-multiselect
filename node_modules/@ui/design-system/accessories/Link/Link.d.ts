import React from 'react';
import { TypographyProps } from '../Typography/Typography';
export interface LinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {
    /**
     * Вариант использования ссылки(внешний, внутренний между страницами сайта и в пределах одной страницы, для документов).
     * Определяет назначение и внешний вид, например наличие иконок у ссылки, значение target.
     */
    variant?: 'external' | 'internal' | 'pseudo' | 'doc';
    /**
     * Тип текста ссылки. Используются варианты текстов из `Typography`.
     * Недоступно для ссылок `doc`.
     */
    textVariant?: TypographyProps['type'];
    /**
     * Обработчик клика по ссылке.
     */
    onClick?: (event?: React.MouseEvent<HTMLAnchorElement>) => void | Promise<void>;
    /**
     * Визуальное отображение ссылки: синий либо серый цвет текста,
     * а также разный формат нижнего подчеркивания. Нижнее подчеркивание пунктирной
     * линией доступно только для `pseudo`.
     */
    linkDecoration?: 'main' | 'main-grey' | 'light-grey' | 'pseudo' | 'pseudo-icon';
    /**
     *  Размер иконки у ссылки типа doc. По умолчанию `s`.
     */
    iconSize?: 's' | 'm';
    /**
     *  Заливка фона вокруг иконки у ссылки типа doc. Только для иконок размера `s`.
     */
    iconDocBackgroundFill?: boolean;
    /**
     * Наличие и положение подписи с размером файла у ссылки типа doc.
     */
    linkFileSizeInfoPosition?: 'none' | 'bottom' | 'right';
    /**
     * Черно-белая иконка без внутренней заливки либо цветная.
     */
    iconColorType?: 'stroke' | 'full';
    /**
     * Размер документа с указанием единиц измерения.
     */
    linkDocSize?: string;
    /**
     * Тип документа, если известен, либо null.
     */
    iconDocType?: null | '.doc' | '.docx' | '.pdf' | '.txt' | '.xls';
    /**
     * Дополнительные классы. Нужны для кастомизации стилей или селекторов для UI тестов.
     */
    className?: string;
    /**
     * Возможность использовать компонент Link из react-router-dom для навигации между страницами сайта без перезагрузки страницы.
     * При подобном использовании ссылки предполагается, что приложение обернуто в BrowserRouter и роутинг настроен.
     */
    withReactRouter?: boolean;
    /**
     * Изменение цвета ссылки для использования в темной цветовой теме(цвет фона - body-primary)
     */
    reverseColorMode?: boolean;
    /**
     * Режим отображения ссылки, при котором ссылка встраивается в окружающий ее текст
     * и поддерживает перенос текста(актуально для ссылок с длинным текстовым содержимым).
     * Использовать только в ссылках без декоративных элементов, так как инлайновые
     * стили ломают их корректное расположение в компоненте!
     */
    inlineLinkMode?: boolean;
}
/**
 * Ссылка. Используется для перехода на сторонние сайты, для перехода между страницами сайта,
 * либо в пределах одной страницы по якорю.
 * Также используется для загрузки документов.
 *
 */
declare const Link: React.FC<LinkProps>;
export declare const defaultLinkProps: LinkProps;
export default Link;
