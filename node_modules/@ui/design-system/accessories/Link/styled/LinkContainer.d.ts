/// <reference types="react" />
import { LinkProps } from '../Link';
interface ReactLinkProps extends React.RefAttributes<HTMLAnchorElement> {
    linkdecoration: LinkProps['linkDecoration'];
    inlineLinkMode: LinkProps['inlineLinkMode'];
    disabled?: boolean;
}
interface LinkContainerProps {
    href?: string;
    variant?: 'external' | 'internal' | 'pseudo' | 'doc';
    iconDocType?: '.doc' | '.docx' | '.pdf' | '.txt' | '.xls';
    linkDecoration?: 'main' | 'main-grey' | 'light-grey' | 'pseudo' | 'pseudo-icon';
    inlineLinkMode?: boolean;
    disabled?: boolean;
    reverseColorMode?: boolean;
}
export declare const LinkContainer: import("styled-components").StyledComponent<"a", any, LinkContainerProps, never>;
export declare const ReactLinkContainer: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("react-router-dom").LinkProps & import("react").RefAttributes<HTMLAnchorElement>>, any, ReactLinkProps, never>;
export {};
