import React from 'react';
import { ControlProps } from '../BaseControlWrapper/ControlWrapper';
import { СolorScheme } from '../BaseControlWrapper/types';
export interface CheckboxProps extends ControlProps {
    /**
     * Отображаемое значение чекбокса.
     */
    label?: string;
    /**
     * Состояние чекбокса.
     */
    value: null | boolean;
    /**
     * Определяет внешний вид чекбокса:
     * `default` - классическая "галочка".
     * `toggle` - переключатель с анимированным "плавающим" индикатором.
     */
    variant?: 'default' | 'toggle';
    /**
     * Функция для изменения отображаемого лейбла.
     * Получает основную информацию о чекбоксе, на основе которой должна вернуть лейбл чекбокса.
     * ВНИМАНИЕ! Тултип чекбокса будет отрисовываться в любом случае, если указан.
     * В кастомном лейбле необходимо предусматривать отступы для иконки тултипа.
     * <a href="/?path=/docs/design-system-справочник-рендер-функции--docs#рендер-функции-в-компонентах">Рендер-функция</a>
     */
    renderCustomLabel?: <T extends CheckboxProps>(props: T, checked?: null | boolean) => React.ReactNode;
    /**
     * Обработчик изменений значения.
     */
    onChange?: (props: CheckboxProps, checked: boolean) => Promise<void> | void;
    /**
     * Обработчик события начала редактирования значения. Вызывается по фокусу.
     */
    onEditStart?: (props: CheckboxProps) => Promise<void> | void;
    /**
     * Обработчик события завершения редактирования значения. Вызывается после потери фокуса.
     */
    onEditEnd?: (props: CheckboxProps) => Promise<void> | void;
    /**
     * Идентификатор группы.
     * ТОЛЬКО ДЛЯ ВНУТРЕННЕЙ ЛОГИКИ ГРУППЫ ЧЕКБОКСОВ.
     * Компонент `CheckboxesGroup` автоматически проставляет этот параметр.
     * НЕЛЬЗЯ ПЕРЕДАВАТЬ при использовании отдельного чекбокса вне группы.
     */
    radioGroupId?: string;
    /**
     * Значение чекбокса.
     * ТОЛЬКО ДЛЯ ВНУТРЕННЕЙ ЛОГИКИ ГРУППЫ ЧЕКБОКСОВ.
     * Компонент `CheckboxesGroup` автоматически проставляет этот параметр.
     * НЕЛЬЗЯ ПЕРЕДАВАТЬ при использовании отдельного чекбокса вне группы.
     */
    inputValue?: string;
    /**
     * Смешанный режим, при котором вместо галки отображается минус, в пропс можно передать какое-либо сложное условие
     * и если оно преобразуется в true, будет отображаться минус, если в false - галка. Оба эти значения соответствуют
     * состоянию checked = true.
     */
    mixedMode?: boolean;
    /**
     * Вариант цветовой палитры чекбокса.
     */
    colorScheme?: СolorScheme;
}
/**
 * Checkbox.
 * Используется для выбора или переключения определённого параметра формы в двоичном формате.
 */
declare const Checkbox: React.FC<CheckboxProps>;
export declare const defaultCheckboxProps: Partial<CheckboxProps>;
export default Checkbox;
