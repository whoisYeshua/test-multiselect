import React from 'react';
import { IconProps } from '../../icons_helpers/types';
import { BadgeType, BadgeVariant, Size } from './types';
export interface BadgeProps {
    /**
     * Тип метки. Параметр отвечает за внешний вид метки.
     * `dot` - цветная точка, цвет которой зависит от параметра `variant`
     * (параметр `label` в таком режиме игнорируется).
     * `label-dot` - цветная точка, рядом с которой отображается соответствующий лейбл.
     * `shortcut` - лейбл отображается на цветном фоне в виде блока.
     * поддерживаемые `variant`: 'default', 'warning', 'success', 'disabled',
     * лейбл отображается справа или снизу в зависимости от `labelPosition`, может быть без лейбла.
     */
    type?: BadgeType;
    /**
     * Размер компонента.
     * `dot` - изменяет размер точки
     * `label-dot` - изменяет только размер текста.
     * `shortcut` - изменяет размер текста и отступов
     */
    size?: Size;
    /**
     * Вариант метки. От неё зависит выбор цвета для точки или ярлыка (см. параметр `type`).
     */
    variant?: BadgeVariant;
    /**
     * Подпись к метке/содержимое ярлыка. Отображается в зависимости от выбранного режима (`type`).
     */
    label?: string;
    /**
     * Иконка.
     * Работает с `type`: `label-dot`, `shortcut`
     * <a href="/?path=/docs/design-system-справочник-передача-компонента-в-качестве-параметра-в-другой-компонент--docs#передача-компонента-напрямую">Передаётся напрямую.</a>
     */
    Icon?: React.ComponentType<IconProps>;
    /**
     * Жирное начертание шрифта.
     */
    fontBold?: boolean;
    /**
     * Дополнительные классы. Нужны для кастомизации стилей (например, отступов) или написания селекторов в тестах.
     */
    className?: string;
}
/**
 * Метка. Может быть как простой точкой, так и ярлыком с лейблом.
 * Используется в некоторых компонентах,
 * также доступен для использования отдельно.
 */
declare const Badge: React.FC<BadgeProps>;
export declare const defaultBadgeProps: BadgeProps;
export default Badge;
