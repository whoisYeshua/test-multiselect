import React from 'react';
import { ControlProps } from '../../BaseControlWrapper/ControlWrapper';
interface RangeInputInternalProps {
    focused?: boolean;
    onFocus?: () => void;
    onBlur?: () => void;
}
export interface RangeInputExternalProps extends ControlProps {
    /**
     * Минимальное значение для инпута type=range.
     */
    min?: string | number;
    /**
     * Максимальное значение для инпута type=range.
     */
    max?: string | number;
    /**
     * Шаг ползунка и цена деления для инпута type=range.
     */
    step?: string | number;
    /**
     * Показывать ли шкалу деления для инпута type=range.
     */
    showDivisionScale?: boolean;
    /**
     * Показывать ли цену деления для шкалы инпута type=range.
     */
    showDivisionValue?: boolean;
    /**
     * Массив для отображения кастомных значений для цены деления разметки
     * для инпута type=range.
     */
    divisionValueArray?: string[];
    /**
     * Показывать ли текстовый инпут сверху для инпута type=range.
     */
    showControlBox?: boolean;
    /**
     * Введённое значение.
     */
    value?: string | null;
    /**
     * Режим `OnEverySymbol` позволяет генерировать событие `onChange`
     * после ввода каждого символа. Для типа `range` - на каждое изменение ползунка.
     * По умолчанию `OnBlur` - событие onChange срабатывает при потере фокуса на инпуте.
     */
    flushStrategy?: 'OnBlur' | 'OnEverySymbol';
    /**
     * Обработчик изменений значения.
     */
    onChange?: (props: RangeInputExternalProps, newValue: string) => Promise<void> | void;
    /**
     * Обработчик события начала редактирования значения. Вызывается по фокусу.
     */
    onEditStart?: (props: RangeInputExternalProps) => Promise<void> | void;
    /**
     * Обработчик события завершения редактирования значения. Вызывается после потери фокуса.
     */
    onEditEnd?: (props: RangeInputExternalProps) => Promise<void> | void;
}
declare const RangeInput: React.VFC<RangeInputExternalProps & RangeInputInternalProps>;
export default RangeInput;
