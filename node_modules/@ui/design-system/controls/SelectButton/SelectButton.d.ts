import React, { ReactElement } from 'react';
import { Direction } from '../../types';
import { ControlProps } from '../BaseControlWrapper/ControlWrapper';
import { SelectableControlItem } from '../Select/useStateManager';
export interface SelectButtonProps<Item extends SelectableControlItem = SelectableControlItem> extends ControlProps {
    /**
     * Выбранное значение радио-кнопки
     */
    value: Item['code'] | null;
    /**
     * Список возможных значений
     * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>
     */
    items: Item[];
    /**
     * Направление размещения элементов.
     * Колонкой сверху вниз или строкой слева направо.
     * В режиме строки необходимо внимательно относиться к доступной ширине экрана и к адаптивности.
     */
    direction?: Direction;
    /**
     * Обработчик изменений значения.
     */
    onChange?: (props: SelectButtonProps<Item>, newValue: Item['code']) => Promise<void> | void;
    /**
     * Обработчик события начала редактирования значения. Вызывается по фокусу.
     */
    onEditStart?: (props: SelectButtonProps<Item>) => Promise<void> | void;
    /**
     * Обработчик события завершения редактирования значения. Вызывается после потери фокуса.
     */
    onEditEnd?: (props: SelectButtonProps<Item>) => Promise<void> | void;
    /**
     * Функция для изменения отрисовки лейбла кнопки.
     * <a href="/?path=/docs/design-system-справочник-рендер-функции--docs#рендер-функции-в-компонентах">Рендер-функция</a>
     */
    renderCustomLabel?: (item: Item, checked?: boolean) => React.ReactNode;
}
export declare const defaultSelectButtonProps: {
    direction: string;
    disabled: boolean;
    locked: boolean;
    hidden: boolean;
    showTooltip: boolean;
};
/**
 * Список кнопок. Используется для выбора одного значения из нескольких.
 */
export declare type SelectButtonType = <Item extends SelectableControlItem>(props: SelectButtonProps<Item>) => ReactElement;
declare const _default: SelectButtonType;
export default _default;
