import React from 'react';
import { TypographyProps } from '../Typography/Typography';
export interface LinkButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    /**
     * Вариант использования кнопки.
     * Определяет назначение и внешний вид, например наличие иконок у кнопки.
     */
    variant?: 'external' | 'internal' | 'pseudo' | 'doc';
    /**
     * Обработчик клика по кнопке.
     */
    onClick?: (event?: React.MouseEvent<HTMLButtonElement>) => void | Promise<void>;
    /**
     * Визуальное отображение кнопки: синий либо серый цвет текста,
     * а также разный формат нижнего подчеркивания. Нижнее подчеркивание пунктирной
     * линией доступно только для `pseudo`.
     */
    linkDecoration?: 'main' | 'main-grey' | 'light-grey' | 'pseudo' | 'pseudo-icon';
    /**
     *  Размер иконки у кнопки типа doc. По умолчанию `s`.
     */
    iconSize?: 's' | 'm';
    /**
     * Тип текста ссылки. Используются варианты текстов из `Typography`.
     * Недоступно для ссылок `doc`.
     */
    textVariant?: TypographyProps['type'];
    /**
     *  Заливка фона вокруг иконки у кнопки типа doc. Только для иконок размера `s`.
     */
    iconDocBackgroundFill?: boolean;
    /**
     * Наличие и положение заголовка с размером файла у кнопки типа doc.
     */
    linkFileSizeInfoPosition?: 'none' | 'bottom' | 'right';
    /**
     * Черно-белая иконка без внутренней заливки либо цветная.
     */
    iconColorType?: 'stroke' | 'full';
    /**
     * Размер документа с указанием единиц измерения.
     */
    linkDocSize?: string;
    /**
     * Тип документа, если известен, либо null.
     */
    iconDocType?: null | '.doc' | '.docx' | '.pdf' | '.txt' | '.xls';
    /**
     * Дополнительные классы. Нужны для кастомизации стилей или селекторов для UI тестов.
     */
    className?: string;
    /**
     * Изменение цвета кнопки для использования в темной цветовой теме.
     */
    reverseColorMode?: boolean;
    /**
     * Активность. Определяет, доступен ли клик по кнопке.
     */
    disabled?: boolean;
}
/**
 * Кнопка, стилизованная под ссылку. Использует идентичные с ней свойства.
 * Должна применяться вместо обычной ссылки, когда у ссылки нет адреса и есть только onClick для корректности разметки.
 *
 */
declare const LinkButton: React.FC<LinkButtonProps>;
export declare const defaultLinkButtonProps: LinkButtonProps;
export default LinkButton;
