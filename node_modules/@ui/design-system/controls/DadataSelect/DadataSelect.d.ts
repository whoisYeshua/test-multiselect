import { ReactElement } from 'react';
import { SelectProps } from '../Select/Select';
import { SearchParamsWithBounds } from './api/helpers/addRequestBody';
import { Services } from '../Dadata/types';
export declare type Service = 'address' | 'metro' | 'bank' | 'fio' | 'fms_unit' | 'name' | 'surname' | 'patronymic' | 'party';
export interface DescriptionContent {
    key: string;
    prefix?: string;
    postfix?: string;
}
export declare type DescriptionContentItem = DescriptionContent | string;
export interface DadataSelectProps<T extends Service = 'address', UseFullItem extends boolean = false> extends Omit<SelectProps<Services[T], false, UseFullItem>, 'async' | 'searchable' | 'clearable' | 'showValueInInput' | 'onOptionsSearch' | 'checkboxOptions' | 'showAllSelectedLabel' | 'isMulti' | 'isCombined' | 'checkboxOptions' | 'showAllSelectedLabel' | 'items' | 'optionsTitle' | 'autoOpenNextStep' | 'inputDisabled'>, SearchParamsWithBounds {
    /**
     * Справочник базы данных dadata, в котором будет происходить поиск .
     * На данный момент поддерживает адрес, метро, банки, фио, отделы фмс.
     */
    service?: T;
    /**
     *  При поиске приоритет городу пользователя. Работает только при address service.
     */
    geolocation?: boolean;
    /**
     *  Строка которая подставляется перед query по которому происходит поиск адреса.
     */
    flatRegion?: string;
    /**
     *  Параметр позволяющий указать какое поле из ответа от api `dadata` будет использоваться как
     *  выбранное значение селекта. Значение является ключем.
     *  В первую очередь поиск значение происходит в объекте `data`,
     *  затем проверяется верхний уровень объекта. По умолчанию берется значение из ключа `value`
     */
    visibleValueKey?: string;
    /**
     *  Параметр позволяющий указать какие поля из ответа от api `dadata` будут показаны в
     *  элементе выпадающего списка. Если значениый несколько они будут выводится через запятую.
     *  Значение является ключем. В первую очередь поиск значение происходит в объекте `data`,
     *  затем проверяется верхний уровень объекта. По умолчанию берется значение из ключа `value`
     */
    descriptionContentKeys?: DescriptionContentItem[];
    /**
     *  Функция обратного вызова для обработки ошибок API при попытке распознать геолокацию пользователя.
     *  Можно использовать для логирования ошибок или показа уведомлений.
     */
    onDetectAddressError?: (e: unknown) => void;
    /**
     *  Функция обратного вызова для обработки ошибок API при попытке получить опции.
     *  Можно использовать для логирования ошибок или показа уведомлений.
     */
    onFetchSuggestionsError?: (e: unknown) => void;
}
export declare const defaultDadataSelectProps: {
    creatable: boolean;
    showDescription: boolean;
    notFoundMessage: string;
    debounceTimer: number;
    acyncSearchMessage: string;
    optionsLoadingErrorMessage: string;
    disabled: boolean;
    locked: boolean;
    hidden: boolean;
    showTooltip: boolean;
    size: import("../BaseControlWrapper/styled/ControlBox").ControlBoxSize;
    scrollTopOffset: number;
};
/**
 * Компонент для выбора значений из выпадающего списка, получаемого из сервиса Dadata.
 */
export declare type DadataSelectType = <T extends Service = 'address', UseFullItem extends boolean = false>(props: DadataSelectProps<T, UseFullItem>) => ReactElement;
declare const _default: DadataSelectType;
export default _default;
