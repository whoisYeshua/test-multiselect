import { ReactElement } from 'react';
import { LightControlProps } from '../LightControlWrapper/LightControlWrapper';
import { SelectableControlItem, SelectValue } from '../../controls/Select/useStateManager';
export interface BaseSelectProps<Item extends SelectableControlItem = SelectableControlItem, UseFullItem extends boolean = false> extends LightControlProps {
    /**
     * Список возможных значений селекта для выбора.
     * <a href="/?path=/story/design-system-справочник-сложные-типы-данных-в-компонентах--docs">Сложный тип данных</a>.
     * Избегать <a href="/?path=/story/design-system-справочник-ссылочный-тип--docs">прямой передачи массива</a>
     */
    items: Item[];
    /**
     * Определяет, какой элемент будет выбран в селекте по умолчанию, отсчет начинается с 0.
     */
    startShownValueIndex?: number;
    /**
     * Скроллит к выбранному элементу при открытии списка опций.
     */
    scrollToValue?: boolean;
    /**
     * Режим контрола, при котором как поле `value`, так и обработчик `onChange`
     * работают с полным объектом `item`, вместо кода.
     */
    useFullItem?: UseFullItem;
    /**
     * Выбранное значение селекта.
     */
    value?: SelectValue<Item, false, UseFullItem> | null;
    /**
     * Фиксированная ширина поля со значением, если есть необходимость.
     */
    valueFieldWidth?: number;
    /**
     * Обработчик изменений значения.
     */
    onChange?: (props: BaseSelectProps<Item, UseFullItem>, newValue: SelectValue<Item, false, UseFullItem> | null) => Promise<void> | void;
}
export declare const defaultBaseSelectProps: {
    items: any[];
    startShownValueIndex: number;
    disabled: boolean;
    fieldHeight: string;
    useFullItem: boolean;
    scrollToValue: boolean;
};
/**
 * Простой вариант селекта, по функциональности близок к нативному селекту, но использует базовые классы,
 * применяемые в полнофункциональном компоненте Select, в том числе элементы стилей и управление состоянием.
 * Принимает на вход массив фиксированных значений с возможностью выбора текущего активного значения,
 * но без возможности редактирования или добавления новых значений вручную. Единственный возможный вариант обновления
 * вариантов для выбора - передача нового списка в параметры.
 */
export declare type BaseSelectType = <Item extends SelectableControlItem, UseFullItem extends boolean = false>(props: BaseSelectProps<Item, UseFullItem>) => ReactElement;
declare const _default: BaseSelectType;
export default _default;
