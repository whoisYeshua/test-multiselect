import React from 'react';
import { IconProps } from '../../icons_helpers/types';
export declare type BadgeType = 'dot' | 'label-dot' | 'shortcut' | 'square';
export declare type BadgeVariant = 'default' | 'active' | 'warning' | 'error' | 'success' | 'disabled' | 'disabled-stroke' | 'transparent';
export declare type BadgeLabelPosition = 'right' | 'bottom';
export interface BadgeProps {
    /**
     * Тип метки. Параметр отвечает за внешний вид метки.
     * `dot` - цветная точка, цвет которой зависит от параметра `variant`
     * (параметр `label` в таком режиме игнорируется).
     * `label-dot` - цветная точка, рядом с которой отображается соответствующий лейбл.
     * `shortcut` - лейбл отображается на цветном фоне в виде блока.
     * `square` - квадрат с закругленными углами, цвет которого зависит от параметра `variant`,
     * поддерживаемые `variant`: 'default', 'warning', 'success', 'disabled',
     * лейбл отображается справа или снизу в зависимости от `labelPosition`, может быть без лейбла.
     */
    type?: BadgeType;
    /**
     * Вариант метки. От неё зависит выбор цвета для точки или ярлыка (см. параметр `type`).
     */
    variant?: BadgeVariant;
    /**
     * Подпись к метке/содержимое ярлыка. Отображается в зависимости от выбранного режима (`type`).
     */
    label?: string;
    /**
     * Расположение текста. По умолчанию справа от ярлыка.
     * Только для типа `square`.
     */
    labelPosition?: BadgeLabelPosition;
    /**
     * Номер на ярлыке. Если передан перекрывает иконку.
     * Только для типа `square`.
     */
    number?: string | number;
    /**
     * Иконка на ярлыке. Только для типа `square`.
     * <a href="/?path=/docs/design-system-справочник-передача-компонента-в-качестве-параметра-в-другой-компонент--docs#передача-компонента-напрямую">Передаётся напрямую.</a>
     */
    Icon?: React.ComponentType<IconProps>;
    /**
     * Добавление внешней тени к Badge. Используется в некоторых интерфейсах.
     * Только для типа `square`.
     */
    squareShadow?: boolean;
    /**
     * Шрифт подписи меньше стандартного размера.
     * Только для типа `shortcut`.
     */
    fontSmall?: boolean;
    /**
     * Жирное начертание шрифта.
     * Только для типа `shortcut`.
     */
    fontBold?: boolean;
    /**
     * Дополнительные классы. Нужны для кастомизации стилей (например, отступов) или написания селекторов в тестах.
     */
    className?: string;
}
/**
 * Метка. Может быть как простой точкой, так и ярлыком с лейблом.
 * Используется в некоторых компонентах,
 * также доступен для использования отдельно.
 */
declare const Badge: React.FC<BadgeProps>;
export declare const defaultBadgeProps: BadgeProps;
export default Badge;
