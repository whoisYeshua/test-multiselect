import { ReactElement } from 'react';
import { SelectProps } from '../Select/Select';
import { SearchParamsWithBounds } from './api/helpers/addRequestBody';
import { Services } from '../Dadata/types';
export declare type Service = 'address' | 'metro' | 'bank' | 'fio' | 'fms_unit';
export interface DadataSelectProps<T extends Service = 'address', UseFullItem extends boolean = false> extends Omit<SelectProps<Services[T], false, UseFullItem>, 'async' | 'searchable' | 'clearable' | 'showValueInInput' | 'onOptionsSearch' | 'checkboxOptions' | 'showAllSelectedLabel' | 'isMulti' | 'isCombined' | 'checkboxOptions' | 'showAllSelectedLabel' | 'items' | 'optionsTitle' | 'autoOpenNextStep' | 'inputDisabled'>, SearchParamsWithBounds {
    /**
     * Справочник базы данных dadata, в котором будет происходить поиск .
     * На данный момент поддерживает адрес, метро и банки.
     */
    service?: T;
    /**
     *  При поиске приоритет городу пользователя. Работает только при address service.
     */
    geolocation?: boolean;
    /**
     *  Строка которая подставляется перед query по которому происходит поиск адреса.
     */
    flatRegion?: string;
}
export declare const defaultDadataSelectProps: {
    creatable: boolean;
    notFoundMessage: string;
    debounceTimer: number;
    acyncSearchMessage: string;
    optionsLoadingErrorMessage: string;
    disabled: boolean;
    locked: boolean;
    hidden: boolean;
    showTooltip: boolean;
    scrollTopOffset: number;
};
/**
 * Компонент для выбора значений из выпадающего списка, получаемого из сервиса Dadata.
 */
export declare type DadataSelectType = <T extends Service = 'address', UseFullItem extends boolean = false>(props: DadataSelectProps<T, UseFullItem>) => ReactElement;
declare const _default: DadataSelectType;
export default _default;
