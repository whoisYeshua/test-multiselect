/**
 * Обязательные пропсы, которые должны быть переданы в компонент Day
 * Передаются из-за невозможности использовать динамический контекст
 * в собранной библиотеке компонентов
 */
export interface ContextDayProps {
    focusedDate: Date | null;
    isDateFocused: (date: Date) => boolean;
    isDateSelected: (date: Date) => boolean;
    isDateHovered: (date: Date) => boolean;
    isDateBlocked: (date: Date) => boolean;
    isFirstOrLastSelectedDate: (date: Date) => boolean;
    onDateSelect: (date: Date) => void;
    onDateFocus: (date: Date) => void;
    onDateHover: (date: Date | null) => void;
}
export interface DayProps extends ContextDayProps {
    dayLabel?: string;
    date: Date;
    startDate: Date;
    endDate: Date;
    unavailableDates: Date[];
    isDayNotOfTheCurrentMonth?: boolean;
    isRange?: boolean;
    doNotSelectPeriod: boolean;
}
declare const Day: ({ isDateSelected, isDateHovered, isFirstOrLastSelectedDate, isDateBlocked, isDateFocused, focusedDate, onDateHover, onDateSelect, onDateFocus, dayLabel, date, startDate, endDate, isRange, unavailableDates, isDayNotOfTheCurrentMonth, doNotSelectPeriod, }: DayProps) => JSX.Element;
export default Day;
