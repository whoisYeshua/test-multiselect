import { DadataSelectProps } from '../../DadataSelect/DadataSelect';
import { AddressModelMapping } from '../types';
export interface AddressDadataProps extends Omit<DadataSelectProps<'address'>, 'onChange' | 'service' | 'type' | 'useFullItem'> {
    /**
     * Маппинг сущностей Dadata на поля вьюмодели:
     * country, region, district, city, settlement, street,
     * house, building, housing, office, zipCode,
     * kladrId, fiasId, addressRecognitionAccuracy.
     * Может быть дополнена любыми именами полей, которые содержатся в ответе dadata, в каждое из таких полей будет
     * передано значение из соответствующего поля ответа.
     */
    modelMapping?: AddressModelMapping;
    /**
     * Обработчик изменений значения.
     */
    onChange: (props: AddressDadataProps | string, newValue: string | null) => Promise<void> | void;
}
/**
 * Компонент, адаптированный для синхронизации ИРИС, для выбора значений из выпадающего списка адресов,
 * полученного из dadata. После выбора заполняет поля в модели.
 */
declare const AddressDadata: {
    (props: AddressDadataProps): JSX.Element;
    defaultProps: {
        creatable: boolean;
        showDescription: boolean;
        notFoundMessage: string;
        debounceTimer: number;
        acyncSearchMessage: string;
        optionsLoadingErrorMessage: string;
        disabled: boolean;
        locked: boolean;
        hidden: boolean;
        showTooltip: boolean;
        size: import("../../BaseControlWrapper/styled/ControlBox").ControlBoxSize;
        scrollTopOffset: number;
    };
    displayName: string;
};
export default AddressDadata;
